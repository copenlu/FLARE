   Exit: (10) protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-45_gsm8k-trace_output.txt")
^  Call: (10) forall(call(query(_8200)), write(path_result:query(_8200)))
   Call: (12) query(_8200)
   Call: (13) query_max_chips_grams(_8200)
   Call: (14) max_chips_grams(2000, 1800, _8200)
   Call: (15) _17494=250
   Exit: (15) 250=250
   Call: (15) _18720=5
   Exit: (15) 5=5
   Call: (15) _19946=300
   Exit: (15) 300=300
   Call: (15) _21250 is 250*5
   Exit: (15) 1250 is 250*5
   Call: (15) _22402 is 2000-1800
   Exit: (15) 200 is 2000-1800
   Call: (15) _23634 is 200/250
   Exit: (15) 0.8 is 200/250
   Call: (15) _8200 is 0.8*300
   Exit: (15) 240.0 is 0.8*300
   Exit: (14) max_chips_grams(2000, 1800, 240.0)
   Exit: (13) query_max_chips_grams(240.0)
   Exit: (12) query(240.0)
path_result:query(240.0)
^  Exit: (10) forall(user:call(query(_8200)), user:write(path_result:query(_8200)))
   Exit: (6) run_init_goal((set_prolog_flag(color_term, false), leash(-all), trace, protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-45_gsm8k-trace_output.txt"), forall(call(query(_8200)), write(path_result:query(_8200)))), 'set_prolog_flag(color_term,false), leash(-all), trace, protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-45_gsm8k-trace_output.txt"), forall(call(query(Answer)), (write(path_result: query(Answer)))).')
