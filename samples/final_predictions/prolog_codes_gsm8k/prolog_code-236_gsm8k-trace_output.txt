   Exit: (10) protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-236_gsm8k-trace_output.txt")
^  Call: (10) forall(call(query(_5830)), write(path_result:query(_5830)))
   Call: (12) query(_5830)
   Call: (13) total_cost_before_tax(12, 20000, _13900)
   Call: (14) _13900 is 12*20000
   Exit: (14) 240000 is 12*20000
   Exit: (13) total_cost_before_tax(12, 20000, 240000)
   Call: (13) total_tax(240000, 0.1, _16370)
   Call: (14) _16370 is 240000*0.1
   Exit: (14) 24000.0 is 240000*0.1
   Exit: (13) total_tax(240000, 0.1, 24000.0)
   Call: (13) total_registration_fee(12, 1000, _18840)
   Call: (14) _18840 is 12*1000
   Exit: (14) 12000 is 12*1000
   Exit: (13) total_registration_fee(12, 1000, 12000)
   Call: (13) total_amount_paid(240000, 24000.0, 12000, _5830)
   Call: (14) _5830 is 240000+24000.0+12000
   Exit: (14) 276000.0 is 240000+24000.0+12000
   Exit: (13) total_amount_paid(240000, 24000.0, 12000, 276000.0)
   Exit: (12) query(276000.0)
path_result:query(276000.0)
^  Exit: (10) forall(user:call(query(_5830)), user:write(path_result:query(_5830)))
   Exit: (6) run_init_goal((set_prolog_flag(color_term, false), leash(-all), trace, protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-236_gsm8k-trace_output.txt"), forall(call(query(_5830)), write(path_result:query(_5830)))), 'set_prolog_flag(color_term,false), leash(-all), trace, protocol("samples/final_predictions/prolog_codes_gsm8k/prolog_code-236_gsm8k-trace_output.txt"), forall(call(query(TotalAmountPaid)), (write(path_result: query(TotalAmountPaid)))).')
